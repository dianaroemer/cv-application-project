{"version":3,"sources":["Components/Navbar.js","Components/Field Components/PersonalInformationForm.js","Components/Field Components/WorkExperienceForm.js","Components/Field Components/EducationalExperienceForm.js","Components/FormContainer.js","Components/PreviewContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Component","PersonalInformationForm","this","props","updateInputField","personalInformation","style","borderStyle","borderRadius","borderColor","borderWidth","type","placeholder","onChange","e","value","name","title","photoURL","address","phone","email","linkedIn","gitHub","WorkExperienceForm","workExperienceArr","createExperience","deleteExperience","elementType","rows","forEach","element","push","workExperience","key","onClick","WorkExperienceSlot","position","company","location","startDate","endDate","descriptionOfDuties","EducationalExperienceForm","educationalExperienceArr","educationalExperience","EducationalExperienceSlot","institution","degree","details","FormContainer","appState","setSampleState","PreviewContainer","workRows","toUpperCase","educationalRows","whiteSpace","href","App","bind","state","uniqid","targetParent","targetField","setState","target","map","targetType","preventDefault","concat","targetElement","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.21acc0ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Styling/NavbarStyle.css'\n\nclass Navbar extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        return (\n            <div className='navbarContainer' >\n                <h3>I am Navbar.js. Build me.</h3>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\n\nclass PersonalInformationForm extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n        const { updateInputField, personalInformation } = this.props;    \n        // const personalInformationObject = userData[0];   \n\n        return (\n            <div className='personalInformationForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'purple', borderWidth: 10}}>\n                <h3>I am personalInformationForm.js. I take all of the personal information fields and keep them in one place!</h3>\n                <div className='nameFieldContainer'>\n                    Name: <input className=\"inputField\" type=\"text\" placeholder='Ferris Bueller' onChange={e => updateInputField(e, personalInformation, 'name')} value={personalInformation.name}></input>\n                </div>\n                <div className='titleFieldContainer'>\n                    Title: <input className=\"inputField\" type=\"text\" placeholder='Front-end Developer' onChange={e => updateInputField(e, personalInformation, 'title')} value={personalInformation.title}>\n                    </input>\n                </div>\n                <div className='photoFieldContainer'>\n                    Photo URL: <input className=\"inputField\" type=\"url\" placeholder='ttps://giphy.com/embed/BzyTuYCmvSORqs1ABM' onChange={e => updateInputField(e, personalInformation, 'photoURL')} value={personalInformation.photoURL}></input>\n                    <button type=\"button\">Get Photo</button>\n                </div>\n                <div className='addressFieldContainer'>\n                    Address: <input className=\"inputField\" type=\"text\" placeholder='137 Trench Run, Death Star' onChange={e => updateInputField(e, personalInformation, 'address')} value={personalInformation.address}></input>\n                </div>\n                <div className='phoneFieldContainer'>\n                    Phone: <input className=\"inputField\" type=\"tel\" placeholder='123-456-1337'  onChange={e => updateInputField(e, personalInformation, 'phone')} value={personalInformation.phone}></input>\n                </div>\n                <div className='emailFieldContainer'>\n                    Email: <input className=\"inputField\" type=\"tel\" placeholder='developer_who_says_NI@email.com' onChange={e => updateInputField(e, personalInformation, 'email')} value={personalInformation.email}></input>\n                </div>\n                <div className='linkedInFieldContainer'>\n                    LinkedIn: <input className=\"inputField\" type=\"url\" placeholder='linkedin.com/McClane-John'  onChange={e => updateInputField(e, personalInformation, 'linkedIn')} value={personalInformation.linkedIn}></input>\n                </div>\n                <div className='gitHubFieldContainer'>\n                    GitHub: <input className=\"inputField\" type=\"url\" placeholder='github.com/github' onChange={e => updateInputField(e, personalInformation, 'gitHub')} value={personalInformation.gitHub}></input>\n                </div>\n\n\n\n                <p></p>\n                {/* <button type=\"submit\" onClick={e => e.preventDefault()}>Submit</button> */}\n                <p></p>\n            </div>\n        )\n    }\n}\n\nexport default PersonalInformationForm;\n\n/*\n\n--- Personal Information ---\nFirst Name: \nLast Name:\nTitle:\nPhoto?:\nAddress:\nPhone Number:\nEmail:\nLinkedIn:\nGithub:\nDescription/Short Bio:\n\n\n*/\n","import React, { Component } from 'react'\n\nclass WorkExperienceForm extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const {workExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\n        let rows =[];\n\n        workExperienceArr.forEach(element => {\n            // console.log(updateInputField);\n            rows.push(\n                <WorkExperienceSlot \n                    workExperience={element}\n                    key={element.key}\n                    updateInputField={updateInputField}\n                    deleteExperience={deleteExperience}/>\n            )\n        });\n\n        return (\n            <div className='workExperienceField' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'navy', borderWidth: 10}}>\n                <h3>I am workExperienceForm.js. I take all of the work experience fields and keep them together! I am one wrapper field with an add button, and an interating subcomponent for variable numbers of workExperienceField</h3>\n                \n                {rows}\n            \n            <p></p>\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)}>Add Work Experience</button>\n            <p></p>\n        </div>\n        )\n    }\n}\n\nclass WorkExperienceSlot extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const { workExperience, updateInputField, deleteExperience } = this.props;\n\n        return (\n            <form className='workExperienceSlot' style={{borderStyle: 'dotted', borderRadius: 2, borderColor: 'magenta', borderWidth: 10}}>\n                <p>I am an individual WorkExperienceSlot. There can be several or none of me, and are determined variably by state management in app!</p>\n                <div className='positionFieldContainer'>\n                    Position: <input className=\"inputField\" type=\"text\" placeholder='Stormtrooper, 2nd Battalion' onChange={e => updateInputField(e, workExperience, 'position')} value={workExperience.position}></input>\n                </div>\n                <div className='companyFieldContainer'>\n                    Company: <input className=\"inputField\" type=\"text\" placeholder='The Empire, LLC' onChange={e => updateInputField(e, workExperience, 'company')} value={workExperience.company}>\n                    </input>\n                </div>\n                <div className='locationFieldContainer'>\n                    Location: <input className=\"inputField\" type=\"text\" placeholder='Star, Death, The' onChange={e => updateInputField(e, workExperience, 'location')} value={workExperience.location}></input>\n                </div>\n                <div className='startDateFieldContainer'>\n                    Start Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'startDate')} value={workExperience.startDate}></input>\n                </div>\n                <div className='endDateFieldContainer'>\n                    End Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'endDate')} value={workExperience.endDate}></input>\n                </div>\n\n                <div className='descriptionFieldContainer'>\n                    Description of Duties: <textarea className='inputField' placeholder='Kept workspace free of filthy Rebel scum, organized weekly Stormtrooper Socials' onChange={e => updateInputField(e, workExperience, 'descriptionOfDuties')} value={workExperience.descriptionOfDuties}></textarea>\n                </div>\n\n                <button type=\"button\" onClick={e => deleteExperience(e, workExperience)}> Delete this Entry </button>\n                <p></p>\n            </form>\n        )\n    }\n\n}\n\nexport default WorkExperienceForm;\n\n/* \n--- Work Experience(VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\nPosition:\nCompany:\nCity:\nStart Date:\nEnd Date:? (maybe set this is a duration sort of thing?)\nShort description:\n*/","import React, { Component } from 'react'\n\nclass EducationalExperienceForm extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        const {educationalExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\n        let rows =[];\n\n        educationalExperienceArr.forEach(element => {\n            // console.log(updateInputField);\n            rows.push(\n                <EducationalExperienceSlot \n                    educationalExperience={element}\n                    key={element.key}\n                    updateInputField={updateInputField}\n                    deleteExperience={deleteExperience}/>\n            )\n        });\n\n        return (\n            <div className='educationExperienceField' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'brown', borderWidth: 10}}>\n                <h3>I am EducationalExperienceForm.js. I take all of the educational experience fields and keep them together! I am one wrapper field with an add button, and an interating subcomponent for variable numbers of educationExperienceField</h3>\n\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\n                {rows}\n            \n            <p></p>\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)}>Add More Educational Experience</button>\n            <p></p>\n        </div>\n        )\n    }\n}\n\nclass EducationalExperienceSlot extends Component {\n\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        const {educationalExperience, updateInputField, deleteExperience} = this.props;\n\n        return (\n            <form className='educationExperienceSlot' style={{borderStyle: 'dotted', borderRadius: 2, borderColor: 'aqua', borderWidth: 10}}>\n                <p>I am an individual EducationExperienceSlot. There can be several or none of me, and are determined variably by state management in app!</p>\n\n\n                <div className='institutionFieldContainer'>\n                    Institution: <input className=\"inputField\" type=\"text\" placeholder='Hogwarts School of Witchcraft and Wizardry' onChange={e => updateInputField(e, educationalExperience, 'institution')} value={educationalExperience.institution}></input>\n                </div>\n                <div className='degreeFieldContainer'>\n                    Degree: <input className=\"inputField\" type=\"text\" placeholder='Master of The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'degree')} value={educationalExperience.degree}>\n                    </input>\n                </div>\n                <div className='startDateFieldContainer'>\n                    Start Datey: <input className=\"inputField\" type=\"month\"   onChange={e => updateInputField(e, educationalExperience, 'startDate')} value={educationalExperience.startDate}></input>\n                </div>\n                <div className='endDateFieldContainer'>\n                    End Date: <input className=\"inputField\" type=\"month\"  onChange={e => updateInputField(e, educationalExperience, 'endDate')} value={educationalExperience.endDate}></input>\n                </div>\n\n                <div className='detailsFieldContainer'>\n                    Additional Details: <textarea className='inputField' placeholder='First Hufflepuff to graduate in The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'details')} value={educationalExperience.details}></textarea>\n                </div>\n                <button type=\"button\" onClick={e => deleteExperience(e, educationalExperience)}> Delete this Entry </button>\n                <p></p>\n            </form>\n        )\n    }\n\n}\n\nexport default EducationalExperienceForm;\n\n\n\n\n/*\n--- Education (VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\nInstitution:\nDegree: (Or degree progress)\nSubject:\nStart Date:\nEnd Date: ?(again, looking at duration to replace these two dates)\n*/","import React, { Component } from 'react'\n// import FormElement from './FormElement';\nimport PersonalInformationForm from './Field Components/PersonalInformationForm';\nimport WorkExperienceForm from './Field Components/WorkExperienceForm'\nimport EducationalExperienceForm from './Field Components/EducationalExperienceForm';\n\n\nclass FormContainer extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n        const { updateInputField, appState, createExperience, deleteExperience, setSampleState } = this.props;\n\n\n        return (\n            <div className='FormContainer' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'green', borderWidth: 10}}>\n                <h3>I am FormContainer.js. I contain forms. Let's put something together</h3>\n                <button type=\"submit\" onClick={setSampleState} className='sampleStateButton'>Generate Sample CV</button>\n                <PersonalInformationForm \n                    updateInputField={updateInputField}\n                    personalInformation={appState.personalInformation}/>\n                <WorkExperienceForm workExperienceArr={appState.workExperience.workExperienceArr}\n                    elementType={appState.workExperience.type}\n                    updateInputField={updateInputField}\n                    createExperience={createExperience}\n                    deleteExperience={deleteExperience}/>\n                <EducationalExperienceForm\n                    educationalExperienceArr={appState.educationalExperience.educationalExperienceArr}\n                    elementType={appState.educationalExperience.type}\n                    updateInputField={updateInputField}\n                    createExperience={createExperience}\n                    deleteExperience={deleteExperience}/>\n\n                    {/* <FormElement/> */}\n                {/* <FormElement/> */}\n            </div>\n        )\n    }\n}\n\nexport default FormContainer;","import React, { Component } from 'react'\n\nclass PreviewContainer extends Component {\n    // constructor(props){\n        // super(props);\n    // }\n\n    render() {\n\n        const { appState } = this.props;\n\n        const personalInformation = appState.personalInformation;\n        const workExperienceArr = appState.workExperience.workExperienceArr;\n        const educationalExperienceArr = appState.educationalExperience.educationalExperienceArr;\n\n        let workRows = [];\n        workExperienceArr.forEach(element => {\n            workRows.push(\n                <div className='previewWorkSlot' key={element.key}>\n                    <text className='previewWorkPosition'>{element.position.toUpperCase()}</text> {element.startDate ? \"  ||  \" : ''} {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \n                    {/* <div className='previewWorkDates'> */}\n                    {/* </div> */}\n                    <div className='previewWorkCompany'>\n                        {element.company}{element.location ? \"  ||  \" : ''}{element.location}</div>\n                    <div className='previewWorkDetails'>{element.descriptionOfDuties}</div> {'\\n'}\n\n                </div>\n            )\n        })\n\n        let educationalRows = [];\n        educationalExperienceArr.forEach(element => {\n            educationalRows.push(\n                <div className='previewEducationalExperienceSlot' key={element.key}>\n\n                    <text className='previewEducationInstitution'>{element.institution}</text> {element.degree ? \" || \" : \"\"} {element.degree} <div></div>\n                    <div className='previewEducationDates'>\n                    {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \n                    </div>\n                    <div className='previewEducationDetails'>{element.details}</div>\n                </div>\n            )\n\n        })\n\n        return (\n\n            <div className='previewContainer' style={{borderStyle: 'solid', borderRadius: 3, borderWidth: 1, borderColor: 'lightgrey', whiteSpace: 'pre-wrap'}}>\n\n                {/* <h3>I am PreviewContainer.js. Eventually, I will show the output of state from App.js.</h3> */}\n                <div className='previewPersonal'>\n                    {/* Name: {personalInformation.name} {'\\n'}\n                    Title: {personalInformation.title} {'\\n'}\n                    Photo URL: {personalInformation.photoURL} {'\\n'}\n                    Address: {personalInformation.address} {'\\n'}\n                    Phone #: {personalInformation.phone} {'\\n'}\n                    Email: {personalInformation.email} {'\\n'}\n                    LinkedIn: {personalInformation.linkedIn} {'\\n'}\n                    GitHub: {personalInformation.gitHub} {'\\n'} */}\n                    <div className='previewPersonalName'>\n                        {personalInformation.name}\n                    </div>\n                    <div className='previewPersonalTitle'>\n                        {personalInformation.title}\n                    </div>\n                    <div className='previewPersonalAddress'>\n                        {personalInformation.address}\n                    </div>\n                    <div className='previewPersonalPhoneEmail'>\n                        {personalInformation.email ? <a href={\"mailto:\" + personalInformation.email}> {personalInformation.email} </a> : ''}\n                        \n                        {personalInformation.phone ? ' || ' : ''} \n                        {personalInformation.phone}\n                    </div>\n                    <div className='previewPersonalLinks'>\n                        <a href={personalInformation.linkedIn}>{personalInformation.linkedIn}</a>\n                         {personalInformation.gitHub ? '  ||  ' : ''}\n                         <a href={personalInformation.gitHub}>{personalInformation.gitHub}</a>\n                    </div>\n                    <div className='previewPersonalDivider'>- - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - </div>\n\n                </div>\n                {/* <div className='previewWorkExperienceContainer'>\n                    {'\\n'} ----- Work Experience ----- \n                    {'\\n'}\n                    {workRows}\n                </div> */}\n                {workRows[0] ? (<div className='previewWorkContainer'>\n                    <div className='previewHeaderText'>\n                        Work Experience\n                    </div>\n                    {workRows}\n                </div>) : ''}\n\n                {educationalRows[0] ? (<div className='previewEducationalContainer'>\n                    <div className='previewHeaderText'>\n                        Educational Experience\n                    </div>\n                    {educationalRows}\n                </div>) : ''}\n\n                {/* <div className='previewEducationalExperienceContainer'>\n                    {'\\n'} ---- Educational Experience ---- \n                    {'\\n'}\n                    {educationalRows}\n                </div> */}\n            </div>\n\n        )\n    }\n}\n\nexport default PreviewContainer;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport uniqid from \"uniqid\";\nimport Navbar from './Components/Navbar';\nimport FormContainer from './Components/FormContainer';\nimport PreviewContainer from './Components/PreviewContainer';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateInputField = this.updateInputField.bind(this);\n    this.createExperience = this.createExperience.bind(this);\n    this.deleteExperience = this.deleteExperience.bind(this);\n    this.setSampleState = this.setSampleState.bind(this);\n\n    this.state = {\n      personalInformation: {\n        name : '',\n        title: '',\n        photoURL: '',\n        address: '',\n        phone: '',\n        email: '',\n        linkedIn: '',\n        gitHub: '',\n        type: 'personalInformation'\n      },\n      workExperience: {\n        type: 'workExperience',\n        workExperienceArr: [{\n          position: 'Stormtrooper, 2nd Battalion',\n          company: '',\n          location: '',\n          startDate: '',\n          endDate: '',\n          descriptionOfDuties: '',\n          key: uniqid(),\n          type: 'workExperience'\n          }, \n        ], \n        \n      },\n      educationalExperience: {\n        type: 'educationalExperience',\n        educationalExperienceArr: [ {\n          type: 'educationalExperience',\n          institution: '1',\n          degree: '',\n          startDate: '',\n          endDate:'',\n          details: '',\n          key: uniqid(),\n        }, \n        ]\n      }\n    }\n  }\n\n  updateInputField(e, targetParent, targetField) {\n    // console.log(`I am updateInputField, here are my passed args`);\n    // console.log(e)\n    // console.log(e.target.value);\n    // console.log(targetParent);\n    // console.log(targetField);\n    // console.log(`-------------------------------`)\n\n    if(targetParent.type === 'personalInformation') {\n      this.setState({\n        // This setState works by passing around the targetParent.type and the targetField. targetParent.type is included in each userData object as a string description of each parent object's name, while targetField is manually set when passing the onChange function, as it is assigned to its specific field and value. There may be a way to tie a React elements value prop more literally, but this works quickly with string evaluation into a computed property name that only overrides the one value that is being targeted.\n        [targetParent.type] : {\n          ...this.state[targetParent.type],\n          [targetField] : e.target.value\n        }\n      })\n    } else if(targetParent.type === 'workExperience' || targetParent.type === `educationalExperience`) {\n      // This branch of setState handles modular components, like workExperience and educationalExperience. Because there can be a variable number of workExperience and EducationalExperience, the state management parses away the relevant input, targetField, and parent information to work with any given input that follows App.js's state structure.\n      // console.log(targetParent, targetField, e.target.value, targetParent.type);\n      this.setState({\n        [targetParent.type]: {\n          type: targetParent.type,\n          [targetParent.type + 'Arr']: this.state[targetParent.type][targetParent.type + 'Arr'].map( element => {\n            if(element === targetParent) {\n              return {\n                ...targetParent,\n                [targetField]: e.target.value,\n              }\n            }\n            return element;\n          }),\n        }\n      })\n    }  \n\n    // console.log(this.state.workExperience.workExperienceArr[0]);\n  }\n\n  createExperience(e, targetType) {\n    e.preventDefault();\n    // console.log(`You're trying to create a new work Experience or Education Experience`);\n    // console.log(targetType)\n\n    if(targetType === 'workExperience') {\n      this.setState({\n        [targetType]: {\n          type: targetType,\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\n              position: 'Sample',\n              company: '',\n              location: '',\n              startDate: '',\n              endDate: '',\n              descriptionOfDuties: '',\n              key: uniqid(),\n              type: 'workExperience'\n            }, \n          ])\n        }\n      })\n    } else if( targetType === 'educationalExperience') {\n      // console.log('here');\n      this.setState({\n        [targetType]: {\n          type: targetType,\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\n              type: 'educationalExperience',\n              institution: '',\n              degree: '',\n              startDate: '',\n              endDate: '',\n              details: '',\n              key: uniqid(),\n            }, \n          ])\n        }\n      })\n    }\n    // console.log(this.state.educationalExperience)\n  }\n\n  deleteExperience(e, targetElement) {\n    e.preventDefault()\n    // console.log(`You're trying to delete a work Experience form or Education Experience form`)\n    // console.log(targetElement)\n    // console.log(this.state[targetElement.type])\n    // console.log(this.state[targetElement.type][targetElement.type + 'Arr'])\n    // console.log(targetElement.type)\n    // console.log(this.state.workExperience)\n    this.setState({\n      [targetElement.type]: {\n        type: targetElement.type,\n        [targetElement.type + 'Arr']: this.state[targetElement.type][targetElement.type + 'Arr'].filter(element => element !== targetElement),\n      }\n    })\n  }\n\n  setSampleState(e) {\n    e.preventDefault();\n    this.setState({\n      personalInformation: {\n        name : 'Dominic \"D\" Roemer',\n        title: 'Front-end Developer',\n        photoURL: '',\n        address: '9337 Stargaze Ave, San Diego, CA',\n        phone: 'XXX-XXX-9407',\n        email: 'dominicroemer@gmail.com',\n        linkedIn: 'linkedin.com/in/dominicroemer',\n        gitHub: 'github.com/dominicroemer',\n        type: 'personalInformation'\n      },\n      workExperience: {\n        type: 'workExperience',\n        workExperienceArr: [\n          { position: 'Front-end Developer',\n            company: 'Self Employed',\n            location: 'San Diego, California',\n            startDate: '2021-05',\n            endDate: 'Present',\n            descriptionOfDuties: 'Entirely self-taught from web resources (TheOdinProject && StackOverflow). Established strong fundamental Javascript knowledge for easy integration into existing work-flows',\n            key: uniqid(),\n            type: 'workExperience'\n          }, {\n            position: 'Executive Producer',\n            company: 'The Esports Channel',\n            location: 'Miami, Florida',\n            startDate: '2019-04',\n            endDate: '2019-08',\n            descriptionOfDuties: 'Acted as on-air talent, writer, editor, graphics, and more for esports startup. Used extensive knowledge of broadcast to level-up existing broadcast from a once weekly broadcast to a daily show',\n            key: uniqid(),\n            type: 'workExperience'\n          }, {\n            position: 'Esports Commentator',\n            company: 'Riot Games',\n            location: 'Los Angeles, USA  &&  Sydney, AUS  &&  Shanghai, CN',\n            startDate: '2015-01',\n            endDate: '2018-12',\n            descriptionOfDuties: 'On-air commentator for LCS, LPL, and Collegiate competitive esports broadcasts. Required in depth knowledge of game, mechanics, players, competitive narrative, and broadcast fundamentals, to be communicated in on-the-fly dictation',\n            key: uniqid(),\n            type: 'workExperience'\n          },\n    ], \n        \n      },\n      educationalExperience: {\n        type: 'educationalExperience',\n        educationalExperienceArr: [ {\n          type: 'educationalExperience',\n          institution: 'University of California at San Diego',\n          degree: 'Computer Science, B.S.',\n          startDate: '2010-09',\n          endDate:'2014-12',\n          details: 'Studied Bioenginering for 1.5 years, Comp Sci for 2 years. Left before graduating to pursue esports commentary with Riot Games in late 2014.',\n          key: uniqid(),\n        }, \n        ]\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"AppContainer\" style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'blue', borderWidth: 10}}>\n        {/* <h2>I am App.js, my parent is AppContainer. Would you like to develop an App?</h2> */}\n        <Navbar/>\n        <div className='content' >\n          <FormContainer \n            updateInputField={this.updateInputField}\n            createExperience={this.createExperience}\n            deleteExperience={this.deleteExperience}\n            setSampleState={this.setSampleState}\n            appState={this.state}/>\n          <PreviewContainer appState={this.state} className='previewContainer'/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}