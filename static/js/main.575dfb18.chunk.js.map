{"version":3,"sources":["Components/Navbar.js","Components/Field Components/PersonalInformationForm.js","Components/Field Components/WorkExperienceForm.js","Components/Field Components/SkillForm.js","Components/Field Components/EducationalExperienceForm.js","Components/FormContainer.js","Components/PreviewContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","icon","faBars","onClick","e","preventDefault","faUser","Component","PersonalInformationForm","this","props","updateInputField","personalInformation","style","borderStyle","borderRadius","borderColor","borderWidth","type","placeholder","onChange","value","name","title","photoURL","address","phone","email","linkedIn","gitHub","WorkExperienceForm","workExperienceArr","createExperience","deleteExperience","elementType","rows","forEach","element","push","workExperience","key","id","WorkExperienceSlot","position","company","location","startDate","endDate","descriptionOfDuties","SkillForm","skillArr","toggleSkillEdit","skillRows","skill","SkillSlot","edit","onKeyDown","faCircleCheck","faTrash","faPenToSquare","EducationalExperienceForm","educationalExperienceArr","educationalExperience","EducationalExperienceSlot","institution","degree","details","FormContainer","appState","setSampleState","PreviewContainer","workRows","toUpperCase","educationalRows","whiteSpace","App","bind","state","uniqid","targetParent","targetField","console","log","setState","target","map","targetType","concat","targetElement","filter","targetSkill","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.575dfb18.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Styling/NavbarStyle.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Navbar extends Component {\r\n    // constructor(props) {\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <nav className='navbarContainer' >\r\n                \r\n                <div className='navLeft'>\r\n                    D Roemer             \r\n                    {/* <img src=\"images/droemer.png\" class=\"nav-droemer\">  */}\r\n                    {/* <FontAwesomeIcon icon={faUser} onClick={e=> preventDefault()}/> */}\r\n                </div>\r\n                \r\n                <div className=\"navTitle\">\r\n                    CV-Application\r\n                </div>\r\n                \r\n\r\n\r\n                <ul>\r\n                    <li className=\"navOptionsToggle\">Options</li>\r\n                    <li className=\"navAboutToggle\">About</li>\r\n                    <li className=\"navPortfolioToggle\">\r\n                        <a href=\"https://github.com/dominicroemer\">Portfolio</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {/* <img src=\"images/nav-menu.png\" class=\"nav-menu-icon\"> */}\r\n\r\n                <FontAwesomeIcon icon={faBars} \r\n                    className=\"navMenuIcon\"\r\n                    onClick={e=> e.preventDefault()}/>\r\n                <FontAwesomeIcon icon={faUser} \r\n                    className='navMenuIcon'\r\n                    onClick={e=> e.preventDefault()}/>\r\n\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\n\r\nclass PersonalInformationForm extends Component {\r\n    // constructor(props) {\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n        const { updateInputField, personalInformation } = this.props;    \r\n        // const personalInformationObject = userData[0];   \r\n\r\n        return (\r\n            <div className='personalInformationForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'purple', borderWidth: 10}}>\r\n                <h3>Personal Information</h3>\r\n                <div className='nameFieldContainer'>\r\n                    Name: <input className=\"inputField\" type=\"text\" placeholder='Ferris Bueller' onChange={e => updateInputField(e, personalInformation, 'name')} value={personalInformation.name}></input>\r\n                </div>\r\n                <div className='titleFieldContainer'>\r\n                    Title: <input className=\"inputField\" type=\"text\" placeholder='Front-end Developer' onChange={e => updateInputField(e, personalInformation, 'title')} value={personalInformation.title}>\r\n                    </input>\r\n                </div>\r\n                <div className='photoFieldContainer'>\r\n                    Photo URL: <input className=\"inputField\" type=\"url\" placeholder='ttps://giphy.com/embed/BzyTuYCmvSORqs1ABM' onChange={e => updateInputField(e, personalInformation, 'photoURL')} value={personalInformation.photoURL}></input>\r\n                    <button type=\"button\">Get Photo (not implemented yet)</button>\r\n                </div>\r\n                <div className='addressFieldContainer'>\r\n                    Address: <input className=\"inputField\" type=\"text\" placeholder='137 Trench Run, Death Star' onChange={e => updateInputField(e, personalInformation, 'address')} value={personalInformation.address}></input>\r\n                </div>\r\n                <div className='phoneFieldContainer'>\r\n                    Phone: <input className=\"inputField\" type=\"tel\" placeholder='123-456-1337'  onChange={e => updateInputField(e, personalInformation, 'phone')} value={personalInformation.phone}></input>\r\n                </div>\r\n                <div className='emailFieldContainer'>\r\n                    Email: <input className=\"inputField\" type=\"tel\" placeholder='developer_who_says_NI@email.com' onChange={e => updateInputField(e, personalInformation, 'email')} value={personalInformation.email}></input>\r\n                </div>\r\n                <div className='linkedInFieldContainer'>\r\n                    LinkedIn: <input className=\"inputField\" type=\"url\" placeholder='linkedin.com/McClane-John'  onChange={e => updateInputField(e, personalInformation, 'linkedIn')} value={personalInformation.linkedIn}></input>\r\n                </div>\r\n                <div className='gitHubFieldContainer'>\r\n                    GitHub: <input className=\"inputField\" type=\"url\" placeholder='github.com/github' onChange={e => updateInputField(e, personalInformation, 'gitHub')} value={personalInformation.gitHub}></input>\r\n                </div>\r\n\r\n\r\n\r\n                <p></p>\r\n                {/* <button type=\"submit\" onClick={e => e.preventDefault()}>Submit</button> */}\r\n                <p></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonalInformationForm;\r\n\r\n/*\r\n\r\n--- Personal Information ---\r\nFirst Name: \r\nLast Name:\r\nTitle:\r\nPhoto?:\r\nAddress:\r\nPhone Number:\r\nEmail:\r\nLinkedIn:\r\nGithub:\r\nDescription/Short Bio:\r\n\r\n\r\n*/\r\n","import React, { Component } from 'react'\r\n\r\nclass WorkExperienceForm extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {workExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\r\n        let rows =[];\r\n\r\n        workExperienceArr.forEach(element => {\r\n            // console.log(updateInputField);\r\n            rows.push(\r\n                <WorkExperienceSlot \r\n                    workExperience={element}\r\n                    key={element.key}\r\n                    updateInputField={updateInputField}\r\n                    deleteExperience={deleteExperience}/>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='workExperienceForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'navy', borderWidth: 10}}>\r\n                <h3>Work Experience</h3>\r\n                \r\n                {rows}\r\n            \r\n            <p></p>\r\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)} id='workAddButton'>Add Work Experience</button>\r\n            <p></p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass WorkExperienceSlot extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { workExperience, updateInputField, deleteExperience } = this.props;\r\n\r\n        return (\r\n            <form className='workExperienceSlot' style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'black', borderWidth: 3}}>\r\n                <div className='positionFieldContainer'>\r\n                    Position: <input className=\"inputField\" type=\"text\" placeholder='Stormtrooper, 2nd Battalion' onChange={e => updateInputField(e, workExperience, 'position')} value={workExperience.position}></input>\r\n                </div>\r\n                <div className='companyFieldContainer'>\r\n                    Company: <input className=\"inputField\" type=\"text\" placeholder='The Empire, LLC' onChange={e => updateInputField(e, workExperience, 'company')} value={workExperience.company}>\r\n                    </input>\r\n                </div>\r\n                <div className='locationFieldContainer'>\r\n                    Location: <input className=\"inputField\" type=\"text\" placeholder='Star, Death, The' onChange={e => updateInputField(e, workExperience, 'location')} value={workExperience.location}></input>\r\n                </div>\r\n                <div className='startDateFieldContainer'>\r\n                    Start Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'startDate')} value={workExperience.startDate}></input>\r\n                </div>\r\n                <div className='endDateFieldContainer'>\r\n                    End Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'endDate')} value={workExperience.endDate}></input>\r\n                </div>\r\n\r\n                <div className='descriptionFieldContainer'>\r\n                    Description of Duties: <textarea className='inputField' placeholder='Kept workspace free of filthy Rebel scum, organized weekly Stormtrooper Socials' onChange={e => updateInputField(e, workExperience, 'descriptionOfDuties')} value={workExperience.descriptionOfDuties}></textarea>\r\n                </div>\r\n\r\n                <button type=\"button\" onClick={e => deleteExperience(e, workExperience)}> Delete this Entry </button>\r\n                <p></p>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default WorkExperienceForm;\r\n\r\n/* \r\n--- Work Experience(VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\r\nPosition:\r\nCompany:\r\nCity:\r\nStart Date:\r\nEnd Date:? (maybe set this is a duration sort of thing?)\r\nShort description:\r\n*/","import React, { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenToSquare, faCircleCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nclass SkillForm extends Component {\r\n\r\n    render() {\r\n\r\n        const {skillArr, updateInputField, createExperience, deleteExperience, toggleSkillEdit } = this.props;\r\n\r\n        const skillRows = [];\r\n\r\n        skillArr.forEach(element => {\r\n            skillRows.push(\r\n                <SkillSlot skill={element}\r\n                updateInputField={updateInputField}\r\n                toggleSkillEdit={toggleSkillEdit}\r\n                deleteExperience={deleteExperience}\r\n                key={element.key}/>\r\n            )\r\n        })\r\n        \r\n\r\n        return (\r\n            <div className='skillForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'red', borderWidth: 10}}>\r\n                <h3 className='skillsHeaderText'>Skills</h3>\r\n                {skillRows}\r\n                \r\n            <button type=\"submit\" onClick={e => createExperience(e, 'skill')} id='skillAddButton'>Add Skills</button>\r\n            <p></p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SkillSlot extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { skill, updateInputField, toggleSkillEdit, deleteExperience } = this.props;\r\n\r\n        if(skill.edit) {\r\n            return (\r\n                <form className='skillEditForm'>\r\n                    <input type=\"text\" className=\"inputField\" placeholder=\"Shooting womp rats in Beggar's Canyon\"  \r\n                        onChange={e => updateInputField(e, skill, skill)} \r\n                        onKeyDown={e=> {\r\n                            if(e.key === \"Enter\"){\r\n                                toggleSkillEdit(e, skill);\r\n                            }\r\n                        }}\r\n                        value={skill.skill}></input>\r\n\r\n                    <FontAwesomeIcon icon={faCircleCheck} onClick={(e) => toggleSkillEdit(e, skill)}/>\r\n                    <FontAwesomeIcon icon={faTrash} onClick={e=> deleteExperience(e, skill)} />\r\n\r\n                </form>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <form className='skillForm'>\r\n                {skill.skill} |\r\n                <FontAwesomeIcon icon={faPenToSquare} onClick={(e) => toggleSkillEdit(e, skill)}/>\r\n                <FontAwesomeIcon icon={faTrash} onClick={e=> deleteExperience(e, skill)} />\r\n\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SkillForm;","import React, { Component } from 'react'\r\n\r\nclass EducationalExperienceForm extends Component {\r\n    // constructor(props) {\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {educationalExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\r\n        let rows =[];\r\n\r\n        educationalExperienceArr.forEach(element => {\r\n            // console.log(updateInputField);\r\n            rows.push(\r\n                <EducationalExperienceSlot \r\n                    educationalExperience={element}\r\n                    key={element.key}\r\n                    updateInputField={updateInputField}\r\n                    deleteExperience={deleteExperience}/>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='educationExperienceForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'brown', borderWidth: 10}}>\r\n                <h3>Educational Experience</h3>\r\n\r\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\r\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\r\n                {rows}\r\n            \r\n            <p></p>\r\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)} id='educationAddButton'>Add Educational Experience</button>\r\n            <p></p>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass EducationalExperienceSlot extends Component {\r\n\r\n    // constructor(props) {\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {educationalExperience, updateInputField, deleteExperience} = this.props;\r\n\r\n        return (\r\n            <form className='educationExperienceSlot' style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'black', borderWidth: 3}}>\r\n\r\n                <div className='institutionFieldContainer'>\r\n                    Institution: <input className=\"inputField\" type=\"text\" placeholder='Hogwarts School of Witchcraft and Wizardry' onChange={e => updateInputField(e, educationalExperience, 'institution')} value={educationalExperience.institution}></input>\r\n                </div>\r\n                <div className='degreeFieldContainer'>\r\n                    Degree: <input className=\"inputField\" type=\"text\" placeholder='Master of The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'degree')} value={educationalExperience.degree}>\r\n                    </input>\r\n                </div>\r\n                <div className='startDateFieldContainer'>\r\n                    Start Date: <input className=\"inputField\" type=\"month\"   onChange={e => updateInputField(e, educationalExperience, 'startDate')} value={educationalExperience.startDate}></input>\r\n                </div>\r\n                <div className='endDateFieldContainer'>\r\n                    End Date: <input className=\"inputField\" type=\"month\"  onChange={e => updateInputField(e, educationalExperience, 'endDate')} value={educationalExperience.endDate}></input>\r\n                </div>\r\n\r\n                <div className='detailsFieldContainer'>\r\n                    Additional Details: <textarea className='inputField' placeholder='First Hufflepuff to graduate in The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'details')} value={educationalExperience.details}></textarea>\r\n                </div>\r\n                <button type=\"button\" onClick={e => deleteExperience(e, educationalExperience)}> Delete this Entry </button>\r\n                <p></p>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EducationalExperienceForm;\r\n\r\n\r\n\r\n\r\n/*\r\n--- Education (VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\r\nInstitution:\r\nDegree: (Or degree progress)\r\nSubject:\r\nStart Date:\r\nEnd Date: ?(again, looking at duration to replace these two dates)\r\n*/","import React, { Component } from 'react'\r\n// import FormElement from './FormElement';\r\nimport PersonalInformationForm from './Field Components/PersonalInformationForm';\r\nimport WorkExperienceForm from './Field Components/WorkExperienceForm'\r\nimport SkillForm from './Field Components/SkillForm'\r\nimport EducationalExperienceForm from './Field Components/EducationalExperienceForm';\r\n\r\n\r\nclass FormContainer extends Component {\r\n    // constructor(props) {\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n        const { updateInputField, appState, createExperience, deleteExperience, toggleSkillEdit, setSampleState } = this.props;\r\n\r\n\r\n        return (\r\n            <div className='FormContainer'>\r\n                {/* <h3>I am FormContainer.js. I contain forms. Let's put something together</h3> */}\r\n                <button type=\"submit\" onClick={setSampleState} className='sampleStateButton'>Generate Sample CV</button>\r\n                <PersonalInformationForm \r\n                    updateInputField={updateInputField}\r\n                    personalInformation={appState.personalInformation}/>\r\n                <WorkExperienceForm workExperienceArr={appState.workExperience.workExperienceArr}\r\n                    elementType={appState.workExperience.type}\r\n                    updateInputField={updateInputField}\r\n                    createExperience={createExperience}\r\n                    deleteExperience={deleteExperience}/>\r\n                \r\n                <SkillForm skillArr={appState.skillArr}\r\n                createExperience={createExperience}\r\n                deleteExperience={deleteExperience}\r\n                toggleSkillEdit={toggleSkillEdit}\r\n                updateInputField={updateInputField}/>\r\n                \r\n                <EducationalExperienceForm\r\n                    educationalExperienceArr={appState.educationalExperience.educationalExperienceArr}\r\n                    elementType={appState.educationalExperience.type}\r\n                    updateInputField={updateInputField}\r\n                    createExperience={createExperience}\r\n                    deleteExperience={deleteExperience}/>\r\n\r\n                    {/* <FormElement/> */}\r\n                {/* <FormElement/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormContainer;","import React, { Component } from 'react'\r\n\r\nclass PreviewContainer extends Component {\r\n    // constructor(props){\r\n        // super(props);\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { appState } = this.props;\r\n\r\n        const personalInformation = appState.personalInformation;\r\n        const workExperienceArr = appState.workExperience.workExperienceArr;\r\n        const skillArr = appState.skillArr;\r\n        const educationalExperienceArr = appState.educationalExperience.educationalExperienceArr;\r\n\r\n        let workRows = [];\r\n        workExperienceArr.forEach(element => {\r\n            workRows.push(\r\n                <div className='previewWorkSlot' key={element.key}>\r\n                    <text className='previewWorkPosition'>{element.position.toUpperCase()}</text> {element.startDate ? \"  ||  \" : ''} {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \r\n                    <div className='previewWorkCompany'>\r\n                        {element.company}{element.location ? \"  ||  \" : ''}{element.location}</div>\r\n                    <div className='previewWorkDetails'>{element.descriptionOfDuties}</div> {'\\n'}\r\n\r\n                </div>\r\n            )\r\n        })\r\n\r\n        let skillRows = []\r\n        skillArr.forEach(element => {\r\n            skillRows.push(\r\n                <li className='previewSkillSlot' key={element.key}>\r\n                    {element.skill}\r\n                </li>\r\n            )\r\n        })\r\n\r\n\r\n        let educationalRows = [];\r\n        educationalExperienceArr.forEach(element => {\r\n            educationalRows.push(\r\n                <div className='previewEducationalExperienceSlot' key={element.key}>\r\n\r\n                    <text className='previewEducationInstitution'>{element.institution}</text> {element.degree ? \" || \" : \"\"} {element.degree} <div></div>\r\n                    <div className='previewEducationDates'>\r\n                    {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \r\n                    </div>\r\n                    <div className='previewEducationDetails'>{element.details}</div>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n\r\n            <div className='previewContainer' style={{borderStyle: 'solid', borderRadius: 3, borderWidth: 1, borderColor: 'lightgrey', whiteSpace: 'pre-wrap'}}>\r\n\r\n                <div className='previewPersonal'>\r\n                    <div className='previewPersonalName'>\r\n                        {personalInformation.name}\r\n                    </div>\r\n                    <div className='previewPersonalTitle'>\r\n                        {personalInformation.title}\r\n                    </div>\r\n                    <div className='previewPersonalAddress'>\r\n                        {personalInformation.address}\r\n                    </div>\r\n                    <div className='previewPersonalPhoneEmail'>\r\n                        {personalInformation.email ? <a href={\"mailto:\" + personalInformation.email}> {personalInformation.email} </a> : ''}\r\n                        \r\n                        {personalInformation.phone ? ' || ' : ''} \r\n                        {personalInformation.phone}\r\n                    </div>\r\n                    <div className='previewPersonalLinks'>\r\n                        <a href={personalInformation.linkedIn}>{personalInformation.linkedIn}</a>\r\n                         {personalInformation.gitHub ? '  ||  ' : ''}\r\n                         <a href={personalInformation.gitHub}>{personalInformation.gitHub}</a>\r\n                    </div>\r\n                    <div className='previewPersonalDivider'>- - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - </div>\r\n\r\n                </div>\r\n                {workRows[0] ? (<div className='previewWorkContainer'>\r\n                    <div className='previewHeaderText'>\r\n                        Work Experience\r\n                    </div>\r\n                    {workRows}\r\n                </div>) : ''}\r\n\r\n                {skillRows[0] ? (<div className='previewSkillContainer'>\r\n                    <div className='previewHeaderText'>\r\n                        Skills\r\n                        </div>\r\n                        <ul className='previewSkillList'>\r\n                        {skillRows}\r\n                        </ul>\r\n                </div>) : ''}\r\n\r\n                {educationalRows[0] ? (<div className='previewEducationalContainer'>\r\n                    <div className='previewHeaderText'>\r\n                        Educational Experience\r\n                    </div>\r\n                    {educationalRows}\r\n                </div>) : ''}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default PreviewContainer;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { Component } from 'react';\r\nimport uniqid from \"uniqid\";\r\nimport Navbar from './Components/Navbar';\r\nimport FormContainer from './Components/FormContainer';\r\nimport PreviewContainer from './Components/PreviewContainer';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.updateInputField = this.updateInputField.bind(this);\r\n    this.createExperience = this.createExperience.bind(this);\r\n    this.deleteExperience = this.deleteExperience.bind(this);\r\n    this.setSampleState = this.setSampleState.bind(this);\r\n    this.toggleSkillEdit = this.toggleSkillEdit.bind(this);\r\n\r\n    this.state = {\r\n      personalInformation: {\r\n        name : '',\r\n        title: '',\r\n        photoURL: '',\r\n        address: '',\r\n        phone: '',\r\n        email: '',\r\n        linkedIn: '',\r\n        gitHub: '',\r\n        type: 'personalInformation'\r\n      },\r\n      workExperience: {\r\n        type: 'workExperience',\r\n        workExperienceArr: [{\r\n          position: 'Stormtrooper, 2nd Battalion',\r\n          company: '',\r\n          location: '',\r\n          startDate: '',\r\n          endDate: '',\r\n          descriptionOfDuties: '',\r\n          key: uniqid(),\r\n          type: 'workExperience'\r\n          }, \r\n        ], \r\n        \r\n      },\r\n      skillArr: [\r\n        {skill: 'Sample Skill', key: uniqid(), type: 'skill', edit: true},\r\n      ],\r\n      educationalExperience: {\r\n        type: 'educationalExperience',\r\n        educationalExperienceArr: [ {\r\n          type: 'educationalExperience',\r\n          institution: '1',\r\n          degree: '',\r\n          startDate: '',\r\n          endDate:'',\r\n          details: '',\r\n          key: uniqid(),\r\n        }, \r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  updateInputField(e, targetParent, targetField) {\r\n    e.preventDefault()\r\n    console.log('------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\r\n    // console.log(`I am updateInputField, here are my passed args`);\r\n    // console.log(e)\r\n    // console.log(e.target.value);\r\n    // console.log(targetParent);\r\n    // console.log(targetField);\r\n    // console.log(`-------------------------------`)\r\n\r\n    if(targetParent.type === 'personalInformation') {\r\n      this.setState({\r\n        // This setState works by passing around the targetParent.type and the targetField. targetParent.type is included in each userData object as a string description of each parent object's name, while targetField is manually set when passing the onChange function, as it is assigned to its specific field and value. There may be a way to tie a React elements value prop more literally, but this works quickly with string evaluation into a computed property name that only overrides the one value that is being targeted.\r\n        [targetParent.type] : {\r\n          ...this.state[targetParent.type],\r\n          [targetField] : e.target.value\r\n        }\r\n      })\r\n    } else if(targetParent.type === 'workExperience' || targetParent.type === `educationalExperience`) {\r\n      // This branch of setState handles modular components, like workExperience and educationalExperience. Because there can be a variable number of workExperience and EducationalExperience, the state management parses away the relevant input, targetField, and parent information to work with any given input that follows App.js's state structure.\r\n      // console.log(targetParent, targetField, e.target.value, targetParent.type);\r\n      this.setState({\r\n        [targetParent.type]: {\r\n          type: targetParent.type,\r\n          [targetParent.type + 'Arr']: this.state[targetParent.type][targetParent.type + 'Arr'].map( element => {\r\n            if(element === targetParent) {\r\n              return {\r\n                ...targetParent,\r\n                [targetField]: e.target.value,\r\n              }\r\n            }\r\n            return element;\r\n          }),\r\n        }\r\n      })\r\n    } else if (targetParent.type === 'skill') {\r\n      // console.log('Editing a skill value');\r\n      this.setState({\r\n        skillArr: this.state.skillArr.map(element => {\r\n          if(element === targetField){\r\n            return {\r\n              ...targetField,\r\n              skill: e.target.value,\r\n            }\r\n          } else {\r\n            return element;\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    // console.log(this.state.workExperience.workExperienceArr[0]);\r\n  }\r\n\r\n  createExperience(e, targetType) {\r\n    e.preventDefault();\r\n    // console.log(`You're trying to create a new work Experience or Education Experience`);\r\n    // console.log(targetType)\r\n\r\n    if(targetType === 'workExperience') {\r\n      this.setState({\r\n        [targetType]: {\r\n          type: targetType,\r\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\r\n              position: 'Sample',\r\n              company: '',\r\n              location: '',\r\n              startDate: '',\r\n              endDate: '',\r\n              descriptionOfDuties: '',\r\n              key: uniqid(),\r\n              type: 'workExperience'\r\n            }, \r\n          ])\r\n        }\r\n      })\r\n    } else if( targetType === 'educationalExperience') {\r\n      // console.log('here');\r\n      this.setState({\r\n        [targetType]: {\r\n          type: targetType,\r\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\r\n              type: 'educationalExperience',\r\n              institution: '',\r\n              degree: '',\r\n              startDate: '',\r\n              endDate: '',\r\n              details: '',\r\n              key: uniqid(),\r\n            }, \r\n          ])\r\n        }\r\n      })\r\n    } else if(targetType === 'skill') {\r\n      // console.log('here');\r\n      this.setState({\r\n        skillArr: this.state.skillArr.concat({\r\n          type: 'skill',\r\n          key: uniqid(),\r\n          skill: 'I AM A NEW SKILL, FEAR ME',\r\n          edit: false,\r\n        })\r\n      })\r\n    }\r\n    // console.log(this.state.educationalExperience)\r\n  }\r\n\r\n  deleteExperience(e, targetElement) {\r\n    e.preventDefault()\r\n    // console.log(`You're trying to delete a work Experience form or Education Experience form`)\r\n    // console.log(targetElement)\r\n    // console.log(this.state[targetElement.type])\r\n    // console.log(this.state[targetElement.type][targetElement.type + 'Arr'])\r\n    // console.log(targetElement.type)\r\n    // console.log(this.state.workExperience)\r\n\r\n    // This if statement is my second attempt at re-writing variable skill elements, instead of containing the array inside an object, I'm just keeping the array as the state property itself, without a shell object that only contains type. \r\n    if(targetElement.type === 'skill'){\r\n      this.setState({\r\n        skillArr: this.state.skillArr.filter(element => element !== targetElement)\r\n      })\r\n    } else { // This else statement is used for deleting elements in the format of workExperience and educationExperience\r\n      this.setState({\r\n        [targetElement.type]: {\r\n          type: targetElement.type,\r\n          [targetElement.type + 'Arr']: this.state[targetElement.type][targetElement.type + 'Arr'].filter(element => element !== targetElement),\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  setSampleState(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      personalInformation: {\r\n        name : 'Dominic \"D\" Roemer',\r\n        title: 'Front-end Developer',\r\n        photoURL: '',\r\n        address: '9337 Stargaze Ave, San Diego, CA',\r\n        phone: 'XXX-XXX-9407',\r\n        email: 'dominicroemer@gmail.com',\r\n        linkedIn: 'linkedin.com/in/dominicroemer',\r\n        gitHub: 'github.com/dominicroemer',\r\n        type: 'personalInformation'\r\n      },\r\n      workExperience: {\r\n        type: 'workExperience',\r\n        workExperienceArr: [\r\n          { position: 'Front-end Developer',\r\n            company: 'Self Employed',\r\n            location: 'San Diego, California',\r\n            startDate: '2021-05',\r\n            endDate: 'Present',\r\n            descriptionOfDuties: 'Entirely self-taught from web resources (TheOdinProject && StackOverflow). Established strong fundamental Javascript knowledge for easy integration into existing work-flows',\r\n            key: uniqid(),\r\n            type: 'workExperience'\r\n          }, {\r\n            position: 'Executive Producer',\r\n            company: 'The Esports Channel',\r\n            location: 'Miami, Florida',\r\n            startDate: '2019-04',\r\n            endDate: '2019-08',\r\n            descriptionOfDuties: 'Acted as on-air talent, writer, editor, graphics, and more for esports startup. Used extensive knowledge of broadcast to level-up existing broadcast from a once weekly broadcast to a daily show',\r\n            key: uniqid(),\r\n            type: 'workExperience'\r\n          }, {\r\n            position: 'Esports Commentator',\r\n            company: 'Riot Games',\r\n            location: 'Los Angeles, USA  &&  Sydney, AUS  &&  Shanghai, CN',\r\n            startDate: '2015-01',\r\n            endDate: '2018-12',\r\n            descriptionOfDuties: 'On-air commentator for LCS, LPL, and Collegiate competitive esports broadcasts. Required in depth knowledge of game, mechanics, players, competitive narrative, and broadcast fundamentals, to be communicated in on-the-fly dictation',\r\n            key: uniqid(),\r\n            type: 'workExperience'\r\n          },\r\n        ], \r\n        \r\n      }, \r\n      skillArr: [\r\n        {skill: 'Javascript, HTML, CSS', key: uniqid(), type: 'skill', edit: false},\r\n        {skill: 'React', key: uniqid(), type: 'skill', edit: false},\r\n        {skill: 'Git and Github', key: uniqid(), type: 'skill', edit: false},\r\n        {skill: 'Excellent Public Speaker', key: uniqid(), type: 'skill', edit: false},\r\n\r\n      ],\r\n      educationalExperience: {\r\n        type: 'educationalExperience',\r\n        educationalExperienceArr: [ {\r\n          type: 'educationalExperience',\r\n          institution: 'University of California at San Diego',\r\n          degree: 'Computer Science, B.S.',\r\n          startDate: '2010-09',\r\n          endDate:'2014-12',\r\n          details: 'Studied Bioenginering for 1.5 years, Comp Sci for 2 years. Left before graduating to pursue esports commentary with Riot Games in late 2014.',\r\n          key: uniqid(),\r\n        }, \r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleSkillEdit(e, targetSkill) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      skillArr: this.state.skillArr.map(element => {\r\n        if(element===targetSkill){\r\n          return {...targetSkill,\r\n          edit: !targetSkill.edit}\r\n        } else {\r\n          return element;\r\n        }\r\n      })\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AppContainer\" style={{backgroundColor: 'bisque'}}>\r\n        {/* Rendering Navbar as a child of AppContainer was hiding the boxshadow in between the two chil elements, NavBar and Content. Manually setting the parent background color to bisque and adding a margin-bottom offset has made the box-shadow visible. Future fix would be rendering NavBar before AppContainer's contents. */}\r\n        {/* <h2>I am App.js, my parent is AppContainer. Would you like to develop an App?</h2> */}\r\n        <Navbar/>\r\n        <div className='content' >\r\n          <FormContainer \r\n            updateInputField={this.updateInputField}\r\n            createExperience={this.createExperience}\r\n            deleteExperience={this.deleteExperience}\r\n            setSampleState={this.setSampleState}\r\n            toggleSkillEdit={this.toggleSkillEdit}\r\n            appState={this.state}/>\r\n          <PreviewContainer appState={this.state} className='previewContainer'/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}