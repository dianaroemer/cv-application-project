{"version":3,"sources":["Components/Navbar.js","Components/Field Components/PersonalInformationForm.js","Components/Field Components/WorkExperienceForm.js","Components/Field Components/SkillForm.js","Components/Field Components/EducationalExperienceForm.js","Components/FormContainer.js","Components/PreviewContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","href","icon","faBars","onClick","e","preventDefault","faUser","Component","PersonalInformationForm","this","props","updateInputField","personalInformation","style","borderStyle","borderRadius","borderColor","borderWidth","type","placeholder","onChange","value","name","title","photoURL","address","phone","email","linkedIn","gitHub","WorkExperienceForm","workExperienceArr","createExperience","deleteExperience","elementType","rows","forEach","element","push","workExperience","key","id","WorkExperienceSlot","position","company","location","startDate","endDate","descriptionOfDuties","SkillForm","skillArr","toggleSkillEdit","skillRows","skill","SkillSlot","edit","onKeyDown","faCircleCheck","faTrash","faPenToSquare","EducationalExperienceForm","educationalExperienceArr","educationalExperience","EducationalExperienceSlot","institution","degree","details","FormContainer","appState","setSampleState","PreviewContainer","workRows","toUpperCase","educationalRows","whiteSpace","App","bind","state","uniqid","targetParent","targetField","console","log","setState","target","map","targetType","concat","targetElement","filter","targetSkill","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.79834de1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Styling/NavbarStyle.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser, faBars } from '@fortawesome/free-solid-svg-icons'\n\nclass Navbar extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        return (\n            <nav className='navbarContainer' >\n                \n                <div className='navLeft'>\n                    D Roemer             \n                    {/* <img src=\"images/droemer.png\" class=\"nav-droemer\">  */}\n                    {/* <FontAwesomeIcon icon={faUser} onClick={e=> preventDefault()}/> */}\n                </div>\n                \n                <div className=\"navTitle\">\n                    CV-Application\n                </div>\n                \n\n\n                <ul>\n                    <li className=\"navOptionsToggle\">Options</li>\n                    <li className=\"navAboutToggle\">About</li>\n                    <li className=\"navPortfolioToggle\">\n                        <a href=\"https://github.com/dominicroemer\">Portfolio</a>\n                    </li>\n                </ul>\n\n                {/* <img src=\"images/nav-menu.png\" class=\"nav-menu-icon\"> */}\n\n                <FontAwesomeIcon icon={faBars} \n                    className=\"navMenuIcon\"\n                    onClick={e=> e.preventDefault()}/>\n                <FontAwesomeIcon icon={faUser} \n                    className='navMenuIcon'\n                    onClick={e=> e.preventDefault()}/>\n\n\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react'\n\nclass PersonalInformationForm extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n        const { updateInputField, personalInformation } = this.props;    \n        // const personalInformationObject = userData[0];   \n\n        return (\n            <div className='personalInformationForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'purple', borderWidth: 10}}>\n                <h3>Personal Information</h3>\n                <div className='nameFieldContainer'>\n                    Name: <input className=\"inputField\" type=\"text\" placeholder='Ferris Bueller' onChange={e => updateInputField(e, personalInformation, 'name')} value={personalInformation.name}></input>\n                </div>\n                <div className='titleFieldContainer'>\n                    Title: <input className=\"inputField\" type=\"text\" placeholder='Front-end Developer' onChange={e => updateInputField(e, personalInformation, 'title')} value={personalInformation.title}>\n                    </input>\n                </div>\n                <div className='photoFieldContainer'>\n                    Photo URL: <input className=\"inputField\" type=\"url\" placeholder='ttps://giphy.com/embed/BzyTuYCmvSORqs1ABM' onChange={e => updateInputField(e, personalInformation, 'photoURL')} value={personalInformation.photoURL}></input>\n                    <button type=\"button\">Get Photo (not implemented yet)</button>\n                </div>\n                <div className='addressFieldContainer'>\n                    Address: <input className=\"inputField\" type=\"text\" placeholder='137 Trench Run, Death Star' onChange={e => updateInputField(e, personalInformation, 'address')} value={personalInformation.address}></input>\n                </div>\n                <div className='phoneFieldContainer'>\n                    Phone: <input className=\"inputField\" type=\"tel\" placeholder='123-456-1337'  onChange={e => updateInputField(e, personalInformation, 'phone')} value={personalInformation.phone}></input>\n                </div>\n                <div className='emailFieldContainer'>\n                    Email: <input className=\"inputField\" type=\"tel\" placeholder='developer_who_says_NI@email.com' onChange={e => updateInputField(e, personalInformation, 'email')} value={personalInformation.email}></input>\n                </div>\n                <div className='linkedInFieldContainer'>\n                    LinkedIn: <input className=\"inputField\" type=\"url\" placeholder='linkedin.com/McClane-John'  onChange={e => updateInputField(e, personalInformation, 'linkedIn')} value={personalInformation.linkedIn}></input>\n                </div>\n                <div className='gitHubFieldContainer'>\n                    GitHub: <input className=\"inputField\" type=\"url\" placeholder='github.com/github' onChange={e => updateInputField(e, personalInformation, 'gitHub')} value={personalInformation.gitHub}></input>\n                </div>\n\n\n\n                <p></p>\n                {/* <button type=\"submit\" onClick={e => e.preventDefault()}>Submit</button> */}\n                <p></p>\n            </div>\n        )\n    }\n}\n\nexport default PersonalInformationForm;\n\n/*\n\n--- Personal Information ---\nFirst Name: \nLast Name:\nTitle:\nPhoto?:\nAddress:\nPhone Number:\nEmail:\nLinkedIn:\nGithub:\nDescription/Short Bio:\n\n\n*/\n","import React, { Component } from 'react'\n\nclass WorkExperienceForm extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n\n        const {workExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\n        let rows =[];\n\n        workExperienceArr.forEach(element => {\n            // console.log(updateInputField);\n            rows.push(\n                <WorkExperienceSlot \n                    workExperience={element}\n                    key={element.key}\n                    updateInputField={updateInputField}\n                    deleteExperience={deleteExperience}/>\n            )\n        });\n\n        return (\n            <div className='workExperienceForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'navy', borderWidth: 10}}>\n                <h3>Work Experience</h3>\n                \n                {rows}\n            \n            <p></p>\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)} id='workAddButton'>Add Work Experience</button>\n            <p></p>\n        </div>\n        )\n    }\n}\n\nclass WorkExperienceSlot extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n\n        const { workExperience, updateInputField, deleteExperience } = this.props;\n\n        return (\n            <form className='workExperienceSlot' style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'black', borderWidth: 3}}>\n                <div className='positionFieldContainer'>\n                    Position: <input className=\"inputField\" type=\"text\" placeholder='Stormtrooper, 2nd Battalion' onChange={e => updateInputField(e, workExperience, 'position')} value={workExperience.position}></input>\n                </div>\n                <div className='companyFieldContainer'>\n                    Company: <input className=\"inputField\" type=\"text\" placeholder='The Empire, LLC' onChange={e => updateInputField(e, workExperience, 'company')} value={workExperience.company}>\n                    </input>\n                </div>\n                <div className='locationFieldContainer'>\n                    Location: <input className=\"inputField\" type=\"text\" placeholder='Star, Death, The' onChange={e => updateInputField(e, workExperience, 'location')} value={workExperience.location}></input>\n                </div>\n                <div className='startDateFieldContainer'>\n                    Start Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'startDate')} value={workExperience.startDate}></input>\n                </div>\n                <div className='endDateFieldContainer'>\n                    End Date: <input className=\"inputField\" type=\"month\" onChange={e => updateInputField(e, workExperience, 'endDate')} value={workExperience.endDate}></input>\n                </div>\n\n                <div className='descriptionFieldContainer'>\n                    Description of Duties: <textarea className='inputField' placeholder='Kept workspace free of filthy Rebel scum, organized weekly Stormtrooper Socials' onChange={e => updateInputField(e, workExperience, 'descriptionOfDuties')} value={workExperience.descriptionOfDuties}></textarea>\n                </div>\n\n                <button type=\"button\" onClick={e => deleteExperience(e, workExperience)}> Delete this Entry </button>\n                <p></p>\n            </form>\n        )\n    }\n\n}\n\nexport default WorkExperienceForm;\n\n/* \n--- Work Experience(VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\nPosition:\nCompany:\nCity:\nStart Date:\nEnd Date:? (maybe set this is a duration sort of thing?)\nShort description:\n*/","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash, faPenToSquare, faCircleCheck } from '@fortawesome/free-solid-svg-icons'\n\n\n\nclass SkillForm extends Component {\n\n    render() {\n\n        const {skillArr, updateInputField, createExperience, deleteExperience, toggleSkillEdit } = this.props;\n\n        const skillRows = [];\n\n        skillArr.forEach(element => {\n            skillRows.push(\n                <SkillSlot skill={element}\n                updateInputField={updateInputField}\n                toggleSkillEdit={toggleSkillEdit}\n                deleteExperience={deleteExperience}\n                key={element.key}/>\n            )\n        })\n        \n\n        return (\n            <div className='skillForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'red', borderWidth: 10}}>\n                <h3 className='skillsHeaderText'>Skills</h3>\n                {skillRows}\n                \n            <button type=\"submit\" onClick={e => createExperience(e, 'skill')} id='skillAddButton'>Add Skills</button>\n            <p></p>\n        </div>\n        )\n    }\n}\n\nclass SkillSlot extends Component {\n\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n\n        const { skill, updateInputField, toggleSkillEdit, deleteExperience } = this.props;\n\n        if(skill.edit) {\n            return (\n                <form className='skillEditForm'>\n                    <input type=\"text\" className=\"inputField\" placeholder=\"Shooting womp rats in Beggar's Canyon\"  \n                        onChange={e => updateInputField(e, skill, skill)} \n                        onKeyDown={e=> {\n                            if(e.key === \"Enter\"){\n                                toggleSkillEdit(e, skill);\n                            }\n                        }}\n                        value={skill.skill}></input>\n\n                    <FontAwesomeIcon icon={faCircleCheck} onClick={(e) => toggleSkillEdit(e, skill)}/>\n                    <FontAwesomeIcon icon={faTrash} onClick={e=> deleteExperience(e, skill)} />\n\n                </form>\n            );\n        }\n\n        return (\n            <form className='skillForm'>\n                {skill.skill} |\n                <FontAwesomeIcon icon={faPenToSquare} onClick={(e) => toggleSkillEdit(e, skill)}/>\n                <FontAwesomeIcon icon={faTrash} onClick={e=> deleteExperience(e, skill)} />\n\n            </form>\n        )\n    }\n\n}\n\nexport default SkillForm;","import React, { Component } from 'react'\n\nclass EducationalExperienceForm extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        const {educationalExperienceArr, updateInputField, createExperience, deleteExperience, elementType} = this.props;\n        let rows =[];\n\n        educationalExperienceArr.forEach(element => {\n            // console.log(updateInputField);\n            rows.push(\n                <EducationalExperienceSlot \n                    educationalExperience={element}\n                    key={element.key}\n                    updateInputField={updateInputField}\n                    deleteExperience={deleteExperience}/>\n            )\n        });\n\n        return (\n            <div className='educationExperienceForm' style={{borderStyle: 'solid', borderRadius: 2, borderColor: 'brown', borderWidth: 10}}>\n                <h3>Educational Experience</h3>\n\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\n                {/* <EducationalExperienceSlot style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'maroon', borderWidth: 10}}/> */}\n                {rows}\n            \n            <p></p>\n            <button type=\"submit\" onClick={e => createExperience(e,elementType)} id='educationAddButton'>Add Educational Experience</button>\n            <p></p>\n        </div>\n        )\n    }\n}\n\nclass EducationalExperienceSlot extends Component {\n\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n\n        const {educationalExperience, updateInputField, deleteExperience} = this.props;\n\n        return (\n            <form className='educationExperienceSlot' style={{borderStyle: 'dashed', borderRadius: 2, borderColor: 'black', borderWidth: 3}}>\n\n                <div className='institutionFieldContainer'>\n                    Institution: <input className=\"inputField\" type=\"text\" placeholder='Hogwarts School of Witchcraft and Wizardry' onChange={e => updateInputField(e, educationalExperience, 'institution')} value={educationalExperience.institution}></input>\n                </div>\n                <div className='degreeFieldContainer'>\n                    Degree: <input className=\"inputField\" type=\"text\" placeholder='Master of The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'degree')} value={educationalExperience.degree}>\n                    </input>\n                </div>\n                <div className='startDateFieldContainer'>\n                    Start Date: <input className=\"inputField\" type=\"month\"   onChange={e => updateInputField(e, educationalExperience, 'startDate')} value={educationalExperience.startDate}></input>\n                </div>\n                <div className='endDateFieldContainer'>\n                    End Date: <input className=\"inputField\" type=\"month\"  onChange={e => updateInputField(e, educationalExperience, 'endDate')} value={educationalExperience.endDate}></input>\n                </div>\n\n                <div className='detailsFieldContainer'>\n                    Additional Details: <textarea className='inputField' placeholder='First Hufflepuff to graduate in The Dark Arts' onChange={e => updateInputField(e, educationalExperience, 'details')} value={educationalExperience.details}></textarea>\n                </div>\n                <button type=\"button\" onClick={e => deleteExperience(e, educationalExperience)}> Delete this Entry </button>\n                <p></p>\n            </form>\n        )\n    }\n\n}\n\nexport default EducationalExperienceForm;\n\n\n\n\n/*\n--- Education (VARIABLE, ADD AND DELETE THESE FORM FIELDS) ---\nInstitution:\nDegree: (Or degree progress)\nSubject:\nStart Date:\nEnd Date: ?(again, looking at duration to replace these two dates)\n*/","import React, { Component } from 'react'\n// import FormElement from './FormElement';\nimport PersonalInformationForm from './Field Components/PersonalInformationForm';\nimport WorkExperienceForm from './Field Components/WorkExperienceForm'\nimport SkillForm from './Field Components/SkillForm'\nimport EducationalExperienceForm from './Field Components/EducationalExperienceForm';\n\n\nclass FormContainer extends Component {\n    // constructor(props) {\n        // super(props);\n    // }\n\n    render() {\n        const { updateInputField, appState, createExperience, deleteExperience, toggleSkillEdit, setSampleState } = this.props;\n\n\n        return (\n            <div className='FormContainer'>\n                {/* <h3>I am FormContainer.js. I contain forms. Let's put something together</h3> */}\n                <button type=\"submit\" onClick={setSampleState} className='sampleStateButton'>Generate Sample CV</button>\n                <PersonalInformationForm \n                    updateInputField={updateInputField}\n                    personalInformation={appState.personalInformation}/>\n                <WorkExperienceForm workExperienceArr={appState.workExperience.workExperienceArr}\n                    elementType={appState.workExperience.type}\n                    updateInputField={updateInputField}\n                    createExperience={createExperience}\n                    deleteExperience={deleteExperience}/>\n                \n                <SkillForm skillArr={appState.skillArr}\n                createExperience={createExperience}\n                deleteExperience={deleteExperience}\n                toggleSkillEdit={toggleSkillEdit}\n                updateInputField={updateInputField}/>\n                \n                <EducationalExperienceForm\n                    educationalExperienceArr={appState.educationalExperience.educationalExperienceArr}\n                    elementType={appState.educationalExperience.type}\n                    updateInputField={updateInputField}\n                    createExperience={createExperience}\n                    deleteExperience={deleteExperience}/>\n\n                    {/* <FormElement/> */}\n                {/* <FormElement/> */}\n            </div>\n        )\n    }\n}\n\nexport default FormContainer;","import React, { Component } from 'react'\n\nclass PreviewContainer extends Component {\n    // constructor(props){\n        // super(props);\n    // }\n\n    render() {\n\n        const { appState } = this.props;\n\n        const personalInformation = appState.personalInformation;\n        const workExperienceArr = appState.workExperience.workExperienceArr;\n        const skillArr = appState.skillArr;\n        const educationalExperienceArr = appState.educationalExperience.educationalExperienceArr;\n\n        let workRows = [];\n        workExperienceArr.forEach(element => {\n            workRows.push(\n                <div className='previewWorkSlot' key={element.key}>\n                    <text className='previewWorkPosition'>{element.position.toUpperCase()}</text> {element.startDate ? \"  ||  \" : ''} {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \n                    <div className='previewWorkCompany'>\n                        {element.company}{element.location ? \"  ||  \" : ''}{element.location}</div>\n                    <div className='previewWorkDetails'>{element.descriptionOfDuties}</div> {'\\n'}\n\n                </div>\n            )\n        })\n\n        let skillRows = []\n        skillArr.forEach(element => {\n            skillRows.push(\n                <li className='previewSkillSlot' key={element.key}>\n                    {element.skill}\n                </li>\n            )\n        })\n\n\n        let educationalRows = [];\n        educationalExperienceArr.forEach(element => {\n            educationalRows.push(\n                <div className='previewEducationalExperienceSlot' key={element.key}>\n\n                    <text className='previewEducationInstitution'>{element.institution}</text> {element.degree ? \" || \" : \"\"} {element.degree} <div></div>\n                    <div className='previewEducationDates'>\n                    {element.startDate} {element.endDate ? \"to\" : ''} {element.endDate} \n                    </div>\n                    <div className='previewEducationDetails'>{element.details}</div>\n                </div>\n            )\n\n        })\n\n        return (\n\n            <div className='previewContainer' style={{borderStyle: 'solid', borderRadius: 3, borderWidth: 1, borderColor: 'lightgrey', whiteSpace: 'pre-wrap'}}>\n\n                <div className='previewPersonal'>\n                    <div className='previewPersonalName'>\n                        {personalInformation.name}\n                    </div>\n                    <div className='previewPersonalTitle'>\n                        {personalInformation.title}\n                    </div>\n                    <div className='previewPersonalAddress'>\n                        {personalInformation.address}\n                    </div>\n                    <div className='previewPersonalPhoneEmail'>\n                        {personalInformation.email ? <a href={\"mailto:\" + personalInformation.email}> {personalInformation.email} </a> : ''}\n                        \n                        {personalInformation.phone ? ' || ' : ''} \n                        {personalInformation.phone}\n                    </div>\n                    <div className='previewPersonalLinks'>\n                        <a href={personalInformation.linkedIn}>{personalInformation.linkedIn}</a>\n                         {personalInformation.gitHub ? '  ||  ' : ''}\n                         <a href={personalInformation.gitHub}>{personalInformation.gitHub}</a>\n                    </div>\n                    <div className='previewPersonalDivider'>- - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - </div>\n\n                </div>\n                {workRows[0] ? (<div className='previewWorkContainer'>\n                    <div className='previewHeaderText'>\n                        Work Experience\n                    </div>\n                    {workRows}\n                </div>) : ''}\n\n                {skillRows[0] ? (<div className='previewSkillContainer'>\n                    <div className='previewHeaderText'>\n                        Skills\n                        </div>\n                        <ul className='previewSkillList'>\n                        {skillRows}\n                        </ul>\n                </div>) : ''}\n\n                {educationalRows[0] ? (<div className='previewEducationalContainer'>\n                    <div className='previewHeaderText'>\n                        Educational Experience\n                    </div>\n                    {educationalRows}\n                </div>) : ''}\n\n            </div>\n\n        )\n    }\n}\n\nexport default PreviewContainer;","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport uniqid from \"uniqid\";\nimport Navbar from './Components/Navbar';\nimport FormContainer from './Components/FormContainer';\nimport PreviewContainer from './Components/PreviewContainer';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateInputField = this.updateInputField.bind(this);\n    this.createExperience = this.createExperience.bind(this);\n    this.deleteExperience = this.deleteExperience.bind(this);\n    this.setSampleState = this.setSampleState.bind(this);\n    this.toggleSkillEdit = this.toggleSkillEdit.bind(this);\n\n    this.state = {\n      personalInformation: {\n        name : '',\n        title: '',\n        photoURL: '',\n        address: '',\n        phone: '',\n        email: '',\n        linkedIn: '',\n        gitHub: '',\n        type: 'personalInformation'\n      },\n      workExperience: {\n        type: 'workExperience',\n        workExperienceArr: [{\n          position: 'Stormtrooper, 2nd Battalion',\n          company: '',\n          location: '',\n          startDate: '',\n          endDate: '',\n          descriptionOfDuties: '',\n          key: uniqid(),\n          type: 'workExperience'\n          }, \n        ], \n        \n      },\n      skillArr: [\n        {skill: 'TESTFOOBARSKILL', key: uniqid(), type: 'skill', edit: true},\n      ],\n      educationalExperience: {\n        type: 'educationalExperience',\n        educationalExperienceArr: [ {\n          type: 'educationalExperience',\n          institution: '1',\n          degree: '',\n          startDate: '',\n          endDate:'',\n          details: '',\n          key: uniqid(),\n        }, \n        ]\n      }\n    }\n  }\n\n  updateInputField(e, targetParent, targetField) {\n    e.preventDefault()\n    console.log('------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------')\n    // console.log(`I am updateInputField, here are my passed args`);\n    // console.log(e)\n    // console.log(e.target.value);\n    // console.log(targetParent);\n    // console.log(targetField);\n    // console.log(`-------------------------------`)\n\n    if(targetParent.type === 'personalInformation') {\n      this.setState({\n        // This setState works by passing around the targetParent.type and the targetField. targetParent.type is included in each userData object as a string description of each parent object's name, while targetField is manually set when passing the onChange function, as it is assigned to its specific field and value. There may be a way to tie a React elements value prop more literally, but this works quickly with string evaluation into a computed property name that only overrides the one value that is being targeted.\n        [targetParent.type] : {\n          ...this.state[targetParent.type],\n          [targetField] : e.target.value\n        }\n      })\n    } else if(targetParent.type === 'workExperience' || targetParent.type === `educationalExperience`) {\n      // This branch of setState handles modular components, like workExperience and educationalExperience. Because there can be a variable number of workExperience and EducationalExperience, the state management parses away the relevant input, targetField, and parent information to work with any given input that follows App.js's state structure.\n      // console.log(targetParent, targetField, e.target.value, targetParent.type);\n      this.setState({\n        [targetParent.type]: {\n          type: targetParent.type,\n          [targetParent.type + 'Arr']: this.state[targetParent.type][targetParent.type + 'Arr'].map( element => {\n            if(element === targetParent) {\n              return {\n                ...targetParent,\n                [targetField]: e.target.value,\n              }\n            }\n            return element;\n          }),\n        }\n      })\n    } else if (targetParent.type === 'skill') {\n      // console.log('Editing a skill value');\n      this.setState({\n        skillArr: this.state.skillArr.map(element => {\n          if(element === targetField){\n            return {\n              ...targetField,\n              skill: e.target.value,\n            }\n          } else {\n            return element;\n          }\n        })\n      })\n    }\n\n    // console.log(this.state.workExperience.workExperienceArr[0]);\n  }\n\n  createExperience(e, targetType) {\n    e.preventDefault();\n    // console.log(`You're trying to create a new work Experience or Education Experience`);\n    // console.log(targetType)\n\n    if(targetType === 'workExperience') {\n      this.setState({\n        [targetType]: {\n          type: targetType,\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\n              position: 'Sample',\n              company: '',\n              location: '',\n              startDate: '',\n              endDate: '',\n              descriptionOfDuties: '',\n              key: uniqid(),\n              type: 'workExperience'\n            }, \n          ])\n        }\n      })\n    } else if( targetType === 'educationalExperience') {\n      // console.log('here');\n      this.setState({\n        [targetType]: {\n          type: targetType,\n          [targetType + 'Arr']: this.state[targetType][targetType + 'Arr'].concat([{\n              type: 'educationalExperience',\n              institution: '',\n              degree: '',\n              startDate: '',\n              endDate: '',\n              details: '',\n              key: uniqid(),\n            }, \n          ])\n        }\n      })\n    } else if(targetType === 'skill') {\n      // console.log('here');\n      this.setState({\n        skillArr: this.state.skillArr.concat({\n          type: 'skill',\n          key: uniqid(),\n          skill: 'I AM A NEW SKILL, FEAR ME',\n          edit: false,\n        })\n      })\n    }\n    // console.log(this.state.educationalExperience)\n  }\n\n  deleteExperience(e, targetElement) {\n    e.preventDefault()\n    // console.log(`You're trying to delete a work Experience form or Education Experience form`)\n    // console.log(targetElement)\n    // console.log(this.state[targetElement.type])\n    // console.log(this.state[targetElement.type][targetElement.type + 'Arr'])\n    // console.log(targetElement.type)\n    // console.log(this.state.workExperience)\n\n    // This if statement is my second attempt at re-writing variable skill elements, instead of containing the array inside an object, I'm just keeping the array as the state property itself, without a shell object that only contains type. \n    if(targetElement.type === 'skill'){\n      this.setState({\n        skillArr: this.state.skillArr.filter(element => element !== targetElement)\n      })\n    } else { // This else statement is used for deleting elements in the format of workExperience and educationExperience\n      this.setState({\n        [targetElement.type]: {\n          type: targetElement.type,\n          [targetElement.type + 'Arr']: this.state[targetElement.type][targetElement.type + 'Arr'].filter(element => element !== targetElement),\n        }\n      })\n    }\n\n  }\n\n  setSampleState(e) {\n    e.preventDefault();\n    this.setState({\n      personalInformation: {\n        name : 'Dominic \"D\" Roemer',\n        title: 'Front-end Developer',\n        photoURL: '',\n        address: '9337 Stargaze Ave, San Diego, CA',\n        phone: 'XXX-XXX-9407',\n        email: 'dominicroemer@gmail.com',\n        linkedIn: 'linkedin.com/in/dominicroemer',\n        gitHub: 'github.com/dominicroemer',\n        type: 'personalInformation'\n      },\n      workExperience: {\n        type: 'workExperience',\n        workExperienceArr: [\n          { position: 'Front-end Developer',\n            company: 'Self Employed',\n            location: 'San Diego, California',\n            startDate: '2021-05',\n            endDate: 'Present',\n            descriptionOfDuties: 'Entirely self-taught from web resources (TheOdinProject && StackOverflow). Established strong fundamental Javascript knowledge for easy integration into existing work-flows',\n            key: uniqid(),\n            type: 'workExperience'\n          }, {\n            position: 'Executive Producer',\n            company: 'The Esports Channel',\n            location: 'Miami, Florida',\n            startDate: '2019-04',\n            endDate: '2019-08',\n            descriptionOfDuties: 'Acted as on-air talent, writer, editor, graphics, and more for esports startup. Used extensive knowledge of broadcast to level-up existing broadcast from a once weekly broadcast to a daily show',\n            key: uniqid(),\n            type: 'workExperience'\n          }, {\n            position: 'Esports Commentator',\n            company: 'Riot Games',\n            location: 'Los Angeles, USA  &&  Sydney, AUS  &&  Shanghai, CN',\n            startDate: '2015-01',\n            endDate: '2018-12',\n            descriptionOfDuties: 'On-air commentator for LCS, LPL, and Collegiate competitive esports broadcasts. Required in depth knowledge of game, mechanics, players, competitive narrative, and broadcast fundamentals, to be communicated in on-the-fly dictation',\n            key: uniqid(),\n            type: 'workExperience'\n          },\n        ], \n        \n      }, \n      skillArr: [\n        {skill: 'Javascript, HTML, CSS', key: uniqid(), type: 'skill', edit: false},\n        {skill: 'React', key: uniqid(), type: 'skill', edit: false},\n        {skill: 'Git and Github', key: uniqid(), type: 'skill', edit: false},\n        {skill: 'Excellent Public Speaker', key: uniqid(), type: 'skill', edit: false},\n\n      ],\n      educationalExperience: {\n        type: 'educationalExperience',\n        educationalExperienceArr: [ {\n          type: 'educationalExperience',\n          institution: 'University of California at San Diego',\n          degree: 'Computer Science, B.S.',\n          startDate: '2010-09',\n          endDate:'2014-12',\n          details: 'Studied Bioenginering for 1.5 years, Comp Sci for 2 years. Left before graduating to pursue esports commentary with Riot Games in late 2014.',\n          key: uniqid(),\n        }, \n        ]\n      }\n    });\n  }\n\n  toggleSkillEdit(e, targetSkill) {\n    e.preventDefault();\n\n    this.setState({\n      skillArr: this.state.skillArr.map(element => {\n        if(element===targetSkill){\n          return {...targetSkill,\n          edit: !targetSkill.edit}\n        } else {\n          return element;\n        }\n      })\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"AppContainer\" style={{backgroundColor: 'bisque'}}>\n        {/* Rendering Navbar as a child of AppContainer was hiding the boxshadow in between the two chil elements, NavBar and Content. Manually setting the parent background color to bisque and adding a margin-bottom offset has made the box-shadow visible. Future fix would be rendering NavBar before AppContainer's contents. */}\n        {/* <h2>I am App.js, my parent is AppContainer. Would you like to develop an App?</h2> */}\n        <Navbar/>\n        <div className='content' >\n          <FormContainer \n            updateInputField={this.updateInputField}\n            createExperience={this.createExperience}\n            deleteExperience={this.deleteExperience}\n            setSampleState={this.setSampleState}\n            toggleSkillEdit={this.toggleSkillEdit}\n            appState={this.state}/>\n          <PreviewContainer appState={this.state} className='previewContainer'/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}